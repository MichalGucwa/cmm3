<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="DB%20Handler%20Documentation_files/filelist.xml">
<title>DB Handler Documentation</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Wanjuan Yang</o:Author>
  <o:LastAuthor>Wanjuan Yang</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1651</o:TotalTime>
  <o:LastPrinted>2007-08-20T08:56:00Z</o:LastPrinted>
  <o:Created>2007-08-23T09:40:00Z</o:Created>
  <o:LastSaved>2007-08-23T09:40:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2119</o:Words>
  <o:Characters>12082</o:Characters>
  <o:Company>CCLRC Daresbury Laboratory</o:Company>
  <o:Lines>100</o:Lines>
  <o:Paragraphs>28</o:Paragraphs>
  <o:CharactersWithSpaces>14173</o:CharactersWithSpaces>
  <o:Version>11.8132</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:408239201;
	mso-list-type:hybrid;
	mso-list-template-ids:1088053818 -949074602 134807577 134807579 134807567 134807577 134807579 134807567 134807577 134807579;}
@list l0:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:532427022;
	mso-list-type:hybrid;
	mso-list-template-ids:1569864194 -949074602 134807577 134807579 134807567 134807577 134807579 134807567 134807577 134807579;}
@list l1:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2
	{mso-list-id:685408221;
	mso-list-type:hybrid;
	mso-list-template-ids:787645732 -949074602 134807577 134807579 134807567 134807577 134807579 134807567 134807577 134807579;}
@list l2:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3
	{mso-list-id:1673490338;
	mso-list-type:hybrid;
	mso-list-template-ids:-1174239038 -949074602 134807577 134807579 134807567 134807577 134807579 134807567 134807577 134807579;}
@list l3:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
</head>

<body lang=EN-GB style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:16.0pt'><span
style='mso-spacerun:yes'>                                </span>DB Handler
Documentation<o:p></o:p></span></b></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>    </span><span
style='mso-spacerun:yes'>                              </span><span
style='mso-spacerun:yes'> </span>Wanjuan Yang <o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'>                         </span><span
style='mso-spacerun:yes'>                              </span><span
style='mso-spacerun:yes'>      </span>August 2007<o:p></o:p></i></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>Part 1:<span style='mso-spacerun:yes'>  </span>Components
of DB handler:<o:p></o:p></span></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>This section describes the components of DB handler and what
each module does. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>DB handler includes modules dbccp4i.py, <span class=SpellE>manager.py</span>,
<span class=SpellE>DBcommand.py</span>, ccp4i.py, <span class=SpellE>dbapi_sqlite.py</span>.
</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>dbccp4i.py</b>: This
is the main program. It is a server program. When it is running, it listens and
waits for clients to connect. <span class=GramE>The initial port number that
dbccp4i uses is 4090.</span> But when it is not available, db handler tries to
increase the port number by 1 each time until it finds an available port number
to use. Then the port number will be written into lock file dbccp4i.LOCK in
.CCP4 directory. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>When a client connects to the handler, dbccp4i starts a
thread and deals with the requests from clients. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>manager.py</b></span>:
contains class Manager, Project, Client, User.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>Manager</i> is a class
that manages projects in the handler. It stores the projects that opened in the
handler, the clients that connecting to the handler, the users that connecting
to the handler. It provides the methods of <span class=SpellE>OpenProject</span>,
<span class=SpellE>NewProject</span>, <span class=SpellE>SaveProject</span>, <span
class=SpellE>CloseProject</span> etc.<span style='mso-spacerun:yes'> 
</span>When it is initialised, it takes an argument of <span class=SpellE>directories.def</span>
file. The default <span class=SpellE>directories.def</span> is the one in .CCP4/unix
or .CCP4/window directory. But you could give an alternative file for that.
Currently, the handler used in <span class=SpellE>MrBUMP</span> takes an
alternative <span class=SpellE>directories.def</span>. How to modify the <span
class=SpellE>manager.py</span> to suit <span class=SpellE>MrBUMP</span> will be
described in part 4.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>Project</i> is a class
that stores a database instance and the clients that open this database.</p>

<p class=MsoNormal><span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>Client</i> is a class
that represents a client connection to the handler. <span
style='mso-spacerun:yes'> </span>It stores the address of the client, the
projects that the client open, the broadcast flag that the client set, the user
name of the client etc.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>User</i> is a class
that represents a user that log in the computer. It stores the user name, user
agent. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE><span class=GramE>manager.py</span></span>
also contains a class <span class=SpellE><i style='mso-bidi-font-style:normal'>messager</i></span>
which outputs the message to a file or on the screen; a function of <span
class=SpellE><i style='mso-bidi-font-style:normal'>response_wrapper</i></span>
and <span class=SpellE><i style='mso-bidi-font-style:normal'>result_wrapper</i></span>.
</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>DBcommand.py</b></span><b
style='mso-bidi-font-weight:normal'>: </b>This file contains most of <span
class=SpellE>dbhandler</span> commands. There are sections for the commands.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Section 1: Commands
for central SQL db<o:p></o:p></b></p>

<p class=MsoNormal>This section contains functions that access central SQL db.</p>

<p class=MsoNormal><st1:place w:st="on">Central SQL</st1:place> db is designed
for one handler opens one <span class=SpellE>SQLite</span> database. The
current central <span class=SpellE>SQLite</span> consists of tables Project,
Job.<span style='mso-spacerun:yes'>  </span>However, currently the central <span
class=SpellE>SQLite</span> db is not in use.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Commands in this section include:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Functions: </p>

<p class=MsoNormal>1. <span class=SpellE><span class=GramE><i style='mso-bidi-font-style:
normal'>do_sql_newrecord_command</i></span></span>:</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>NewRecord</b></span>: Generic command for
creating a new record in a pre-defined table.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>NewProject</b></span>: Create a new record
in Project table.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>NewJob</b></span>: create a new record in
Job table.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>2. <span class=SpellE><span class=GramE><i style='mso-bidi-font-style:
normal'>do_sql_setdata_command</i></span></span>:</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>SetJobData</b></span>: update a job record
in Job table. </p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>SetData</b></span>: update record in a
given table. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>3. <span class=SpellE><span class=GramE><i style='mso-bidi-font-style:
normal'>do_sql_command</i></span></span>:</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetJobData</b></span>: Get a job attribute
value in the Job table. </p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetProjectList</b></span>: Get a list of
projects.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetJobList</b></span>: Get a list of jobs. </p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetTableSchema</b></span>: Get attributes
for a table. </p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetRowofTable</b></span>: Get all of the
records in a given table.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetData</b></span>: Generic command to get
data from a given table.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetProjectId</b></span>: Get a project Id
for a given project name.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>CloseDB</b></span>: close a central <span
class=SpellE>SQLite</span> db.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Section 2: <span
style='mso-spacerun:yes'> </span>Commands for dealing with <span class=SpellE>database.def</span>
<o:p></o:p></b></p>

<p class=MsoNormal>Functions: </p>

<p class=MsoNormal><span class=SpellE><i style='mso-bidi-font-style:normal'>do_def_readdir_command</i></span>:</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetDataDir</b></span>: Return the directory
corresponding to a def dir name</p>

<p class=MsoNormal style='margin-left:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetProjectDir</b></span>: Return the
directory corresponding to a project name</p>

<p class=MsoNormal style='margin-left:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>ListDataDirs</b></span>: Return a list of
the users default directories</p>

<p class=MsoNormal style='margin-left:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetNProjects</b></span>: Return the number
of projects</p>

<p class=MsoNormal style='margin-left:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>ListProjects</b></span>: Return a list of
the users projects</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Section 3: Commands
for writing data in <span class=SpellE>database.def</span><o:p></o:p></b></p>

<p class=MsoNormal>Functions:</p>

<p class=MsoNormal><span class=SpellE><i style='mso-bidi-font-style:normal'>process_writedb_command</i></span>:</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbNewJob</b></span>: create
a new job in the project</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbDeleteJob</b></span>:
Remove an existing job record from the project.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbSetData</b></span>: Set
the value of a data item for the specified job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>Updatetime</b></span>:
Update the time of the job to be the current time.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>AddInputFile</b></span>:
Add a file to the list of input files for a job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>AddOutputFile</b></span>:
Add a file to the list of output files for a job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>AddSubJob</b></span>: Add a
<span class=SpellE>subjob</span> to a job in the project database</p>

<p class=MsoNormal><span class=SpellE><i style='mso-bidi-font-style:normal'>do_def_readdb_command</i></span>:</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>HasSQLdb</b></span>: Check
if the project has a <span class=SpellE>SQLite</span> db backend</p>

<p class=MsoNormal><span style='mso-spacerun:yes'>  </span><span
style='mso-tab-count:1'>          </span><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetNJOB</b></span><b style='mso-bidi-font-weight:
normal'>:</b> Return the value of the NJOBS data item.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbGetData</b></span>:
Retrieve the value of a data item stored for a job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetFiles</b></span>: Return
a list of files for a job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>ListInputFiles</b></span>:
Return a list of input files for a job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>ListOutputFiles</b></span>:
Return a list of output files for a job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbItemExists</b></span>:
Check for the existence of a data item for a particular job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbSelectJobs</b></span>:
Retrieve a list of jobs based on some selection criterion.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>ListJobs</b></span>: Return
the list of all jobs in the project.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetDbItems</b></span>:
Return a list of the core data items stored for all jobs.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbReturnJobs</b></span>:
Return a list of formatted strings populated with job data.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>DbGetListofRecords</b></span>:
Retrieve a list of job records.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetNextJobList</b></span>:
Return a list of job ids corresponding to the children jobs </p>

<p class=MsoNormal><span
style='mso-spacerun:yes'>                                        </span><span
class=GramE>of</span> the specified id.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetAllFileLinks</b></span>:
Return all the links between jobs for a project</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetFileLinks</b></span>:
Return the links between the given job ids.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetAllChildren</b></span>:
Return all the jobs that are descendents of a particular job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetAllParents</b></span>:
Return all the jobs that are antecedents of a particular job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetChildren</b></span>:
Return the immediate children of a given job.</p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span><span
style='mso-tab-count:1'>           </span><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetParents</b></span>: Return the immediate
parents of a given job.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>GetAllParentsChildren</b></span>:
Return all the jobs that has direct or indirect link </p>

<p class=MsoNormal><span
style='mso-spacerun:yes'>                                                     
</span><span class=GramE>with</span> the given job.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>GetNotebook</b></span>: Return the note
book name with the path.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>ProjectWriteable</b></span>: Test if it is
possible to modify and save the data.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>ProjectReadable</b></span>: Test if it is
possible to get data from the database object.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>ReacquireProject</b></span>: force to grab
the project lock.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>SelectSubJobs</b></span>: Retrieve a list
of <span class=SpellE>subjobs</span> based on some selection criterion.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>HasSubJobs</b></span>: Check if a job
currently has <span class=SpellE>subjobs</span> defined.</p>

<p class=MsoNormal style='text-indent:36.0pt'><span class=SpellE><b
style='mso-bidi-font-weight:normal'>ListJobswithsubjobs</b></span>: Return a
list of the jobs which also have <span class=SpellE>subjobs</span>.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Section 4: <span
style='mso-spacerun:yes'> </span>Commands for <span class=SpellE>SQLite</span> db
for a <span class=GramE>particular<span style='mso-spacerun:yes'> 
</span>project</span><o:p></o:p></b></p>

<p class=MsoNormal>One project can have both <span class=SpellE>database.def</span>
and <span class=SpellE>SQLite</span> db backend. Currently, <span class=GramE>There</span>
is a Jobs table to hold the additional job data. It has attributes <span
class=SpellE>JobNumber</span>, <span class=SpellE>JobQuality</span>. This
section contains commands that dealing with <span class=SpellE>SQLite</span>
db. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE>Fuctions</span>: </p>

<p class=MsoNormal><span class=SpellE><i style='mso-bidi-font-style:normal'>do_parallel_sqlitedb_command</i></span><i
style='mso-bidi-font-style:normal'>:<o:p></o:p></i></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>SetJobQuality</b></span><b
style='mso-bidi-font-weight:normal'>: </b>Set the job quality in Jobs table.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>SetSQLdbData</b></span><b
style='mso-bidi-font-weight:normal'>: </b>Generic command to set data in Jobs
table.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>GetSQLdbData</b></span><b
style='mso-bidi-font-weight:normal'>: </b>Generic command to get data from
Jobs table.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>GetAllSQLdbData</b></span><b
style='mso-bidi-font-weight:normal'>: </b>Get all the data from Jobs table,</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>NewTableRecord</b></span><b
style='mso-bidi-font-weight:normal'>: </b>Generic command for inserting a
record in a given table</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>DeleteTableRecord</b></span>:
Generic command for removing a record in a given table</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>DeleteTableRecords</b></span><b
style='mso-bidi-font-weight:normal'>: </b>Delete records in a table bases on
certain condition.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>SetTableData</b></span><b
style='mso-bidi-font-weight:normal'>:</b> Set value for a given table and its
attribute</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>GetTableData</b></span><b
style='mso-bidi-font-weight:normal'>:</b> Retrieve the value of a given table
and attribute</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>GetTablePrimaryKey</b></span><b
style='mso-bidi-font-weight:normal'>:</b> Retrieve primary key(s) for a given
table based on certain condition.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>GetAllTableRecords</b></span><b
style='mso-bidi-font-weight:normal'>:</b> Retrieve all the records in a given
table.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>GetTableRecords</b></span><b
style='mso-bidi-font-weight:normal'>:</b> Retrieve records in a given table
based on certain condition.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>ccp4i.py</b>:<span
style='mso-spacerun:yes'>  </span>This is a class library for emulating the
CCP4i def file based database. It also provides classes for dealing with the
CCP4i <span class=SpellE>directories.def</span> file and generic classes for
.def files and <span class=SpellE>lockfiles</span>.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>dbapi_sqlite.py</b></span><b
style='mso-bidi-font-weight:normal'>:<span style='mso-spacerun:yes'>  </span></b>It
contains the class for interacting <span class=SpellE>SQLite</span> database. </p>

<p class=MsoNormal>It takes a schema file to create a new db. The schema file
must follow the format:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal style='mso-list:l3 level1 lfo2;tab-stops:list 36.0pt'>Each
     create statement end <span class=GramE>with </span>;.</li>
 <li class=MsoNormal style='mso-list:l3 level1 lfo2;tab-stops:list 36.0pt'>The
     primary key for each table must be $<span class=SpellE>tablename_<span
     class=GramE>Id</span></span><span class=GramE> .</span> <span class=GramE>e.g</span>.
     for table Dataset, its primary key is: <span class=SpellE>Dataset_Id</span>.
     For table Jobs, its primary key is <span class=SpellE>Jobs_Id</span>.</li>
</ol>

<p class=MsoNormal style='margin-left:36.0pt'><span class=GramE>e.g</span>.
current <span class=SpellE>SQLite</span> db schema is as follows:</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt;mso-layout-grid-align:none;
text-autospace:none'>CREATE TABLE Jobs (<span class=SpellE>Jobs_Id</span>
INTEGER primary key,</p>

<p class=MsoNormal style='margin-left:72.0pt;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-spacerun:yes'>         </span><span
style='mso-spacerun:yes'>                  </span><span
style='mso-spacerun:yes'> </span><span class=SpellE>JobNumber</span> INTEGER, </p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>             </span><span
style='mso-spacerun:yes'>                           </span><span class=SpellE>JobQuality</span>
<span class=GramE>VARCHAR(</span>40),</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-tab-count:1'>            </span><span
style='mso-spacerun:yes'>             </span><span
style='mso-spacerun:yes'>                           </span><span class=SpellE>UserAgent</span>
<span class=GramE>VARCHAR(</span>40));</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:36.0pt;mso-layout-grid-align:none;
text-autospace:none'>CREATE TABLE Dataset (<span class=SpellE>Dataset_Id</span>
INTEGER primary key,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>          </span><span
style='mso-spacerun:yes'>                       </span><span class=SpellE>DatasetName</span>
<span class=GramE>VARCHAR(</span>64) unique, not null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>MTZfileProject</span> <span class=GramE>VARCHAR(</span>64) not
null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>MTZfileName</span> <span class=GramE>VARCHAR(</span>200) not null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span style='mso-tab-count:
2'>              </span><span
style='mso-spacerun:yes'>                  </span><span
style='mso-spacerun:yes'>   </span><span class=SpellE>Fmean</span> <span
class=GramE>VARCHAR(</span>30) not null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>SigFmean</span> <span class=GramE>VARCHAR(</span>30) not null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>Dano</span> <span class=GramE>VARCHAR(</span>30),</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>SigDano</span> <span class=GramE>VARCHAR(</span>30),</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>MTZCrystalName</span> <span class=GramE>VARCHAR(</span>64),</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>MTZDatasetName</span> <span class=GramE>VARCHAR(</span>64),</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>                                   </span><span
class=SpellE>CurrentHA</span> INTEGER);</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:36.0pt;mso-layout-grid-align:none;
text-autospace:none'>CREATE TABLE HA (<span class=SpellE>HA_Id</span> INTEGER
primary key,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                 </span><span
style='mso-spacerun:yes'>                                  </span><span
class=SpellE>HAfileProject</span> <span class=GramE>VARCHAR(</span>64) not
null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                 </span><span
style='mso-spacerun:yes'>                                  </span><span
class=SpellE>HAfileName</span> <span class=GramE>VARCHAR(</span>200) not null,</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                 </span><span
style='mso-spacerun:yes'>               </span><span
style='mso-spacerun:yes'>                   </span><span class=SpellE>JobNumber</span>
<span class=GramE>VARCHAR(</span>10),</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-spacerun:yes'>                 </span><span
style='mso-spacerun:yes'>                                  </span><span
class=SpellE>DatasetId</span> INTEGER); </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>Part 2: How to make changes in <span class=SpellE>dbhandler</span><o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>1. How to add
commands to the handler<o:p></o:p></b></p>

<p class=MsoNormal>In class <span class=SpellE>ServeClient</span>, it defines
valid commands. The valid commands have 9 groups:</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._admin_db_command</b></span>:
commands for <span class=SpellE>dbhandler</span> itself including <span
class=SpellE><i style='mso-bidi-font-style:normal'>ShutDown</i></span>, <span
class=SpellE><i style='mso-bidi-font-style:normal'>DbDisconnect</i></span>, <span
class=SpellE><i style='mso-bidi-font-style:normal'>DbRegister</i></span>, <span
class=SpellE><i style='mso-bidi-font-style:normal'>DbRequestStatus</i></span>, <span
class=SpellE><i style='mso-bidi-font-style:normal'>DbSupported</i></span>, <span
class=SpellE><i style='mso-bidi-font-style:normal'>DbOpen</i></span>, <span
class=SpellE><i style='mso-bidi-font-style:normal'>DbClose</i></span>. </p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._def_readdb_command</b></span>:
commands for reading data from <span class=SpellE>database.def</span> file. </p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._def_writedb_command</b></span><b
style='mso-bidi-font-weight:normal'>: </b>commands for writing data to <span
class=SpellE>database.def</span> file.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._def_readdir_command</b></span><b
style='mso-bidi-font-weight:normal'>: </b>commands for reading data from <span
class=SpellE>directories.def</span> file.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._def_writedir_command</b></span><b
style='mso-bidi-font-weight:normal'>:</b> commands for writing data to <span
class=SpellE>directories.def</span> file.</p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._parallel_sqldb_command</b></span><b
style='mso-bidi-font-weight:normal'>: </b>commands for dealing with <span
class=SpellE>paralle</span> <span class=SpellE>sql</span> db, i.e. for each
project, it has a <span class=SpellE>sqlite</span> db to store knowledge base
data and additional job data. </p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._sql_newrecord_command</b></span><b
style='mso-bidi-font-weight:normal'>:</b> commands for create a new record in
tables in central <span class=SpellE>sqlite</span> db. Some of the commands are
for particular tables which not in use currently. </p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._sql_setdata_command</b></span><b
style='mso-bidi-font-weight:normal'>: </b>commands for set data value in
central <span class=SpellE>sqlite</span> db. <span class=GramE>( Currently</span>
not in use )<span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'>self._sql_command</b></span><b
style='mso-bidi-font-weight:normal'>: </b>commands for retrieve data from
central <span class=SpellE>sqlite</span> db. <span class=GramE>( Currently</span>
not in use)</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For each command, what it does is to get the arguments and
then call the functions either from ccp4i.database object, ccp4i.directories
object or <span class=SpellE>dbapi_sqlite.DB</span> object. According to the
result return, assign the status for the response. If needed, construct the
broadcast message and return the response. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Steps for adding commands:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal style='mso-list:l2 level1 lfo3;tab-stops:list 36.0pt'>In
     dbccp4i.py, there are 9 <span class=GramE>groups</span> commands.
     According to the function of the new command, assign one of these groups
     for the new command. Add the command in the group in class <span
     class=SpellE>ServeClient</span>, __init_<span class=GramE>_(</span>).</li>
 <li class=MsoNormal style='mso-list:l2 level1 lfo3;tab-stops:list 36.0pt'>Find
     the function <span class=GramE>that<span style='mso-spacerun:yes'> 
     </span>processes</span> the group of command. For function <span
     class=GramE>of <span style='mso-spacerun:yes'> </span><span class=SpellE>process</span></span><span
     class=SpellE>_admin_db_command</span> and <span class=SpellE>process_def_writedir_command</span>
     are in dbccp4i.py. The others are in <span class=SpellE>DBcommand.py</span>.
     </li>
</ol>

<p class=MsoNormal style='margin-left:18.0pt'>3.<span
style='mso-spacerun:yes'>  </span>Add the command in the function. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>2. <span
style='mso-spacerun:yes'> </span>How to add tables in db handler<o:p></o:p></b></p>

<p class=MsoNormal><span class=SpellE>SQLite</span> db schema is in the file <span
class=SpellE>schema.sql</span> in the directory of $DBCCP4_TOP/dbccp4i/. </p>

<p class=MsoNormal>Any changes of the table schema, e.g. adding a new table or
removing a table etc, just add/replace the new schema in the <span
class=SpellE>schema.sql</span> file.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The APIs are mostly <span class=GramE>generic,</span> it can
be called from <span class=SpellE>ClientAPI</span>. So to update the APIs, it
can be done in <span class=SpellE>ClientAPI</span>.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>3. <span
style='mso-spacerun:yes'> </span>How to modify <span class=SpellE>dbhandler</span>
to suit <span class=SpellE>MrBUMP</span>. <o:p></o:p></b></p>

<p class=MsoNormal>Currently, <span class=SpellE>MrBUMP</span> uses a modified
version of <span class=SpellE>dbhandler</span>. It uses its own <span
class=SpellE>directories.def</span> file, so the projects that created by <span
class=SpellE>MrBUMP</span> couldnt be seen from CCP4i. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The changes are in <span class=SpellE>manager.py</span>. At
the very bottom, there is a line:</p>

<p class=MsoNormal><span class=SpellE>ProjectManager</span> = <span
class=GramE>Manager(</span>). This is by default to use the <span class=SpellE>directories.def</span>
in .CCP4/unix or .CCP4/window directory which CCP4i uses.<span
style='mso-spacerun:yes'>  </span>For <span class=SpellE>MrBUMP</span> use,
comment out this line. </p>

<p class=MsoNormal>Instead, uncomment the following 20 lines. What that does is
to make a copy of <span class=SpellE>directories.def</span> in .CCP4/windows or
.CCP4/unix directory and put it .CCP4 directory with the name of <span
class=SpellE>directories_mr.def</span>. Then all the projects created from <span
class=SpellE>MrBUMP</span> are recorded in <span class=SpellE>directories_mr.def</span>.
These projects can only be viewed from <span class=SpellE>dbviewer</span>, but
not in CCP4i. </p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b
style='mso-bidi-font-weight:normal'>4. How to change the timeout for the
handler<o:p></o:p></b></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'>In the
function of <span class=SpellE>sockfactory</span> indbccp4i.py, change the
arguments of <span class=SpellE><span class=GramE>socket.setdefaulttimeout</span></span><span
class=GramE>(</span>). Note that there are two places of <span class=SpellE><span
class=GramE>socket.setdefaulttimeout</span></span><span class=GramE>(</span>).
Both need to be changed. </p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b
style='mso-bidi-font-weight:normal'>5. Where is the debugging output <span
class=GramE>written</span><o:p></o:p></b></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'>The
debugging message is written in the file <span class=SpellE>dbhandler.log</span>
in .CCP4 directory. </p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'>If
use -debug option, then it will output to the screen.</p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b
style='mso-bidi-font-weight:normal'>6. <span style='mso-spacerun:yes'> </span>How/when
is the data saved?<o:p></o:p></b></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'>Data
will be saved regularly every the timeout period. The save of <span
class=SpellE>database.def</span> is implemented in class <span class=SpellE><span
class=GramE>Manager.SaveProject</span></span><span class=GramE>(</span>). The
save of <span class=SpellE>directories.def</span> is implemented in class <span
class=SpellE><span class=GramE>Manager.SaveDirectory</span></span><span
class=GramE>(</span>).</p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>7. <span
style='mso-spacerun:yes'> </span>How to construct the broadcast messages<o:p></o:p></b></p>

<p class=MsoNormal>The construct of broadcast message is manually written in
pre-define XML format. It is constructed in each command. Different commands
have different broadcast messages to send or maybe no broadcast message at all.
</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>Part 3: <span class=SpellE>dbviewer</span> <o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>How does <span
class=SpellE>dbviewer</span> store project data internally?<o:p></o:p></b></p>

<p class=MsoNormal style='margin-left:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Procedure <span class=SpellE>GetDbData</span> project <span
class=GramE>{ <span class=SpellE>jobid</span></span> }  gets the <span
class=SpellE>database.def</span> data from handler when <span class=SpellE>dbviewer</span>
initially displays a project or <span class=SpellE>subjob</span>, or when the <span
class=SpellE>dbviewer</span> refresh.</p>

<p class=MsoNormal>If the <span class=SpellE>jobid</span> is supplied, then the
data is <span class=SpellE>subjob</span> data. All the items of data are stored
in global array database.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Procedure <span class=SpellE>getdata</span> id item gets
the data from database array.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Procedure <span class=SpellE>GetDb_extensionData</span>
project <span class=SpellE>itemlist</span> get the <span class=SpellE>SQLite</span>
table Jobs </p>

<p class=MsoNormal><span class=GramE>data</span> from handler. The procedure is
called when <span class=SpellE>dbviewer</span> initially displays a <span
class=GramE>project<span style='mso-spacerun:yes'>  </span>or</span> <span
class=SpellE>subjob</span>, or when the <span class=SpellE>dbviewer</span>
refresh. Currently table Jobs has items <span class=SpellE>JobNumber</span>,
<span class=SpellE>JobQuality</span>. <span class=SpellE>Dbviewer</span>
stores these two items value in the global array<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><span class=GramE><span class=SpellE>database_extension</span>.</span>
</p>

<p class=MsoNormal style='text-indent:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Procedure <span class=SpellE>get_extension_data</span> item
id gets the data from <span class=GramE>array<span style='mso-spacerun:yes'> 
</span><span class=SpellE>database</span></span><span class=SpellE>_extension</span>.
</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:36.0pt'><span
style='mso-spacerun:yes'> </span></p>

<p class=MsoNormal style='margin-left:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:36.0pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:36.0pt'><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
