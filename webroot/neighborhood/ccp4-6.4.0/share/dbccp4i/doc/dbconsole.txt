There are two applications to test dbClientAPI in tcl, and one in python.

1. dbconsole.tcl:

Usage:  go to the directory $BIOXHIT_TOP/dbccp4i/bin ,type:
        ./dbconsole

Function:

This application opens a connection to the database handler and
gives the user a command line interface to interact with it via
the commands in dbClientAPI.tcl.

In addition to those commands in dbClientAPI.tcl, the console
also provides a set of other commands:

wait <ms>
     Causes the console to pause for <ms> milliseconds
list
     Print a list of the available commands
show_xml
     Echo the XML messages that are passed between the console
     and the handler (this is the default on startup)
hide_xml
     Suppress echoing of the XML messages
report_broadcasts
     Report any broadcast messages received from the handler
     (this is the default on startup)
ignore_broadcasts
     Ignore broadcast messages received from the handler
exit/quit
     Exit the console


2. dbobserver.tcl:

Usage: tclsh dbobserver.tcl

Function:

This "observer" application opens a connection to the database
handler and then attempts to open all the projects for the user
who invoked it. It then waits for broadcast messages from the
handler, and reports any that it receives.

It is therefore a totally passive client and offers no other
options.


3. dbconsole.py:

This file is temperately in the directory $BIOXHIT_TOP/dbccp4i/ClientAPI. 

Usage: 1. Start handler:
          Go to directory $BIOXHIT_TOP/dbccp4i/bin, type:
          ./dbccp4i or ./dbccp4i debug
          For the first command, handler will write the ouput message in the
          log file 'dbhandler.log' in the directory '.CCP4'.
          for the second command, the handler output message is on screen. 

       2. Run the application:
          Go to the directory $BIOXHIT_TOP/dbccp4i/ClientAPI, type:
          python dbconsole.py