1 #---PHASER COMMAND SCRIPT GENERATED BY CCP4I---
{[IfSet $TITLE]} TITLE $TITLE
{[StringSame $MR_MODE AUTO]} MODE MR_AUTO
{[StringSame $MR_MODE ROT]}  MODE MR_ROT
{[StringSame $MR_MODE TRA]}  MODE MR_TRA
{[StringSame $MR_MODE PAK]}  MODE MR_PAK
{[StringSame $MR_MODE RNP]}  MODE MR_RNP
1 ROOT \\"$OUTPUT_FILE_ROOT\\"
$TOG_NJOBS JOBS $NJOBS

1 #---DEFINE DATA---
1 HKLIN \\"$HKLIN_MAIN\\"
LABELLINE LABIN "F SIGF" 

$TOG_RESOLUTION RESOLUTION HIGH $RESOLUTION_DMIN_MR LOW $RESOLUTION_DMAX

IF {[StringSame $MR_MODE ROT RNP PAK] && $TOG_SPACEGROUP }
  {![StringSame $FILE_SPACEGROUP $TEST_SPACEGROUP] && ![StringSame $TEST_SPACEGROUP ""] } SPACEGROUP $TEST_SPACEGROUP
ENDIF

IF {[StringSame $MR_MODE AUTO TRA]}
  {[StringSame $SPACEGROUP_OPTION SG_MTZ]} SGALTERNATIVE SELECT NONE
  {[StringSame $SPACEGROUP_OPTION SG_ENANT]} SGALTERNATIVE SELECT HAND
  {[StringSame $SPACEGROUP_OPTION SG_ALT]} SGALTERNATIVE SELECT LIST
  {[StringSame $SPACEGROUP_OPTION SG_ALL]} SGALTERNATIVE SELECT ALL
  LOOP SG 1 $N_SG
    {[StringSame $SPACEGROUP_OPTION SG_ALT]} SGALTERNATIVE TEST $PHASER_TEST_SG($SG)
  ENDLOOP
ENDIF

1 #---DEFINE ENSEMBLES---
LOOP E 1 $N_ENSEMBLE
  1 ENSEMBLE $ENSEMBLE_ID($E) 
    IF {[StringSame $ENSEMBLE_OPTION($E) PDB]}
      LOOP PDB 1 $N_PDB($E)
      IF  {[StringSame $RMS_OPTION($E,$PDB) CARD]}
      - 1 PDB \\"$XYZIN($E,$PDB)\\" $RMS_OPTION($E,$PDB) ON
      ELSE 
      - 1 PDB \\"$XYZIN($E,$PDB)\\" $RMS_OPTION($E,$PDB) $RMS($E,$PDB)
      ENDIF
      ENDLOOP
    ELSE 
      - 1 HKLIN \\"$HKLIN($E)\\"
    LABELLINE & "FC PHIC" $E
      - {[IfSet $ENSEMBLE_EXT_X($E)]} EXTENT $ENSEMBLE_EXT_X($E) $ENSEMBLE_EXT_Y($E) $ENSEMBLE_EXT_Z($E)
      - {[IfSet $ENSEMBLE_RMS_MTZ($E)]} RMS $ENSEMBLE_RMS_MTZ($E)
      - {[IfSet $ENSEMBLE_CEN_X($E)]} CENTRE $ENSEMBLE_CEN_X($E) $ENSEMBLE_CEN_Y($E) $ENSEMBLE_CEN_Z($E)
      - {[IfSet $ENSEMBLE_PROTMW($E)]} PROTEIN MW $ENSEMBLE_PROTMW($E)
      - {[IfSet $ENSEMBLE_NUCLMW($E)]} NUCL MW $ENSEMBLE_NUCLMW($E)
    ENDIF  
ENDLOOP

IF {![StringSame $MR_MODE PAK]}
  1 #---DEFINE COMPOSITION---
  IF {[StringSame $SCATTERING COMPONENT]}
    1 COMPOSITION BY ASU
  ELSE
    1 COMPOSITION BY $SCATTERING 
  ENDIF
  {[StringSame $SCATTERING SOLVENT]} COMPOSITION PERCENTAGE $SCATTERING_SOLVENT
  LOOP C 1 $N_COMPONENT
    {[StringSame $SCATTERING COMPONENT] && [StringSame $COMP_OPTION($C) MW ]} COMPOSITION $PROTDNA($C) MW $MW($C) NUMBER $ASYM($C)
    {[StringSame $SCATTERING COMPONENT] && [StringSame $COMP_OPTION($C) FASTA ]} COMPOSITION $PROTDNA($C) SEQ \\"$COMP_FILE($C)\\" NUMBER $ASYM($C)
    {[StringSame $SCATTERING COMPONENT] && [StringSame $COMP_OPTION($C) NRES ]} COMPOSITION $PROTDNA($C) NRES $COMP_NRES($C) NUMBER $ASYM($C)
  ENDLOOP
  LOOP C 1 $N_COMPONENT_FRAC
    {[StringSame $SCATTERING FRAC]} COMPOSITION ENSEMBLE $COMP_ENSE_ID($C) FRAC $COMP_ENSE_FRAC($C)
  ENDLOOP
ENDIF

1 #---SEARCH PARAMETERS---

IF {[StringSame $MR_MODE AUTO]}
  IF {[StringSame $MR_SEARCH SEARCH_SIMPLE ]}
    LOOP N_SEAR 1 $N_SIMPLE_SEARCH
      1 SEARCH ENSEMBLE $MR_SIMPLE_ENSEMBLE_ID($N_SEAR) NUMBER $MR_SIMPLE_ENSEMBLE_NUM($N_SEAR)
    ENDLOOP
  ELSE
    LOOP N_SEAR 1 $N_SEARCH
      1 SEARCH ENSEMBLE $MR_FIRST_OR_ENSEMBLE_ID($N_SEAR)
      LOOP N_EXT 1 $N_SEARCH_EXTRA($N_SEAR)
        - 1 OR ENSEMBLE $MR_EXTRA_OR_ENSEMBLE_ID($N_SEAR,$N_EXT)
      ENDLOOP
    - 1 NUMBER $MR_FIRST_OR_ENSEMBLE_NUM($N_SEAR)
    ENDLOOP
  ENDIF
ENDIF

IF {[StringSame $MR_MODE ROT]}
  1 SEARCH ENSEMBLE $MR_ROT_SEARCH_ID
  LOOP N_EXT 1 $N_ROT_SEARCH_EXTRA
    - {[StringSame $MR_ROT_SEARCH SEARCH_OR]} OR ENSEMBLE $MR_ROT_SEARCH_ID_EXTRA($N_EXT)
  ENDLOOP
ENDIF

IF {[StringSame $MR_MODE TRA]}
  {[IfSet $TRA_RLIST_FILE]} @ \\"$TRA_RLIST_FILE\\"
ENDIF

IF {[StringSame $MR_MODE RNP PAK]}
  {[IfSet $SET_SOL_FILE]} @ \\"$SET_SOL_FILE\\"
ENDIF

IF {[StringSame $MR_MODE AUTO ROT]}
  {$TOG_FRF_TARGET && [StringSame $FRF_TARGET_OPTION LERF1]} TARGET ROT FAST
  {$TOG_FRF_TARGET && [StringSame $FRF_TARGET_OPTION BRUTE]} TARGET ROT BRUTE
ENDIF

IF {[StringSame $MR_MODE AUTO ROT] && [StringSame $FRF_TARGET_OPTION BRUTE]}
  {[StringSame $BRF_SEARCH_OPTION FULL]}   ROTATE VOLUME FULL
  {[StringSame $BRF_SEARCH_OPTION AROUND]} ROTATE VOLUME AROUND EULER $AROUND_ALPHA $AROUND_BETA $AROUND_GAMMA RANGE $AROUND_EULER_RANGE 
ENDIF

IF {[StringSame $MR_MODE AUTO TRA]}
  {$TOG_FTF_TARGET && [StringSame $FTF_TARGET_OPTION LETF1]} TARGET TRA FAST
  {$TOG_FTF_TARGET && [StringSame $FTF_TARGET_OPTION BRUTE]} TARGET TRA BRUTE
ENDIF

IF {[StringSame $MR_MODE AUTO TRA] && [StringSame $FTF_TARGET_OPTION BRUTE]}
  {[StringSame $BTF_SEARCH_OPTION FULL]} TRANSLATE VOLUME FULL
  {[StringSame $BTF_SEARCH_OPTION AROUND]} TRANSLATE VOLUME AROUND POINT $START_X $START_Y $START_Z  RANGE $AROUND_COORD_RANGE
  {[StringSame $BTF_SEARCH_OPTION LINE REGION]} TRANSLATE VOLUME $BTF_SEARCH_OPTION START $START_X $START_Y $START_Z END $END_X $END_Y $END_Z
  {[StringSame $BTF_SEARCH_OPTION AROUND LINE REGION]} TRANSLATE $COORD_SYS
ENDIF

IF {[StringSame $MR_MODE AUTO ROT]}
  {[IfSet $SET_SOL_FILE_NOTOB]} @ \\"$SET_SOL_FILE_NOTOB\\"
ENDIF


1 #---EXPERT PARAMETERS---
IF {[StringSame $MR_MODE PAK AUTO]}
  {$TOG_PACK && ![StringSame $PACK_OPTION ALL] } PACK SELECT $PACK_OPTION CUTOFF $PACK_ALLOWED_CLASHES 
  {$TOG_PACK && [StringSame $PACK_OPTION ALL] } PACK SELECT ALL 
  {$TOG_PACK_QUICK} PACK QUICK $PACK_QUICK_ONOFF 
ENDIF

IF {[StringSame $MR_MODE ROT AUTO]}
  {$TOG_PURGE_ROT} PURGE ROT ENABLE $PURGE_ROT_ONOFF
  {$TOG_PURGE_ROT && [StringSame $PURGE_ROT_ONOFF ON] && [IfSet $PURGE_ROT_PERCENT]} PURGE ROT PERCENT $PURGE_ROT_PERCENT
  {$TOG_PURGE_ROT && [StringSame $PURGE_ROT_ONOFF ON] && [IfSet $PURGE_ROT_NUMBER ]} PURGE ROT NUMBER  $PURGE_ROT_NUMBER 
ENDIF

IF {[StringSame $MR_MODE TRA AUTO]}
  {$TOG_PURGE_TRA} PURGE TRA ENABLE $PURGE_TRA_ONOFF
  {$TOG_PURGE_TRA && [StringSame $PURGE_TRA_ONOFF ON] && [IfSet $PURGE_TRA_PERCENT]} PURGE TRA PERCENT $PURGE_TRA_PERCENT
  {$TOG_PURGE_TRA && [StringSame $PURGE_TRA_ONOFF ON] && [IfSet $PURGE_TRA_NUMBER ]} PURGE TRA NUMBER  $PURGE_TRA_NUMBER 
ENDIF

IF {[StringSame $MR_MODE AUTO] }
  {$TOG_RESOLUTION_AUTO} RESOLUTION AUTO HIGH $RESOLUTION_AUTO_DMIN
  {$TOG_SEARCH_HIRES && [StringSame $SEARCH_METHOD FAST]} SEARCH HIRES $SEARCH_HIRES
ENDIF

IF {[StringSame $MR_MODE AUTO]}
  {$TOG_SEARCH_METHOD} SEARCH METHOD $SEARCH_METHOD
  {$TOG_SEARCH_METHOD && [StringSame $SEARCH_METHOD FAST]} SEARCH DEEP $SEARCH_DEEP
  {$TOG_SEARCH_METHOD && [StringSame $SEARCH_METHOD FAST]} SEARCH DOWN PERCENT $SEARCH_DOWN_PERC
ENDIF

IF {[StringSame $MR_MODE AUTO PAK TRA]}
  {$TOG_ZSCORE && [StringSame $SEARCH_METHOD FAST]} ZSCORE USE $ZSCORE_USE 
  {$TOG_ZSCORE && [StringSame $SEARCH_METHOD FAST]} ZSCORE SOLVED $ZSCORE_SOLVED 
  {$TOG_ZSCORE && [StringSame $SEARCH_METHOD FAST]} ZSCORE HALF $ZSCORE_HALF 
  {$TOG_ZSCORE_HIGH && [StringSame $SEARCH_METHOD FAST]} ZSCORE HIGH $ZSCORE_HIGH 
  {$TOG_ELLG} ELLG USE $USE_ELLG 
  {$TOG_ELLG && [StringSame $USE_ELLG ON] && [IfSet $ELLG_TARGET]} ELLG TARGET $ELLG_TARGET 
ENDIF

{$TOG_TNCS_USE} TNCS USE $TNCS_USE
IF {[StringSame $TNCS_USE ON]}
  {$TOG_TNCS_NMOL && [IfSet $TNCS_NMOL]} TNCS NMOL $TNCS_NMOL 
  {$TOG_TNCS_TRA_VECTOR && [IfSet $TNCS_TRA_VECTOR_X] && [IfSet $TNCS_TRA_VECTOR_Y] && [IfSet $TNCS_TRA_VECTOR_Z]} TNCS TRANSLATION VECTOR $TNCS_TRA_VECTOR_X $TNCS_TRA_VECTOR_Y $TNCS_TRA_VECTOR_Z
  {$TOG_TNCS_PATT_PERCENT && [IfSet $TNCS_PATT_PERCENT]} TNCS PATT PERCENT $TNCS_PATT_PERCENT 
ENDIF

1 #---OUTPUT CONTROL---

{$TOG_VERBOSE} VERBOSE ON
{$TOG_VERBOSE_EXTRA} DEBUG ON
{$TOG_KEYWDS} KEYWORDS $KEYWDS_ONOFF
{$TOG_XYZOUT} XYZOUT $XYZOUT_ONOFF
{$TOG_TOPF} TOPFILES $XYZOUT_NPDB
{$TOG_HKLOUT && ![StringSame $MR_MODE PAK]} HKLOUT $HKLOUT_ONOFF

1 #---DEVELOPER PARAMETERS---

IF {[StringSame $MR_MODE ROT AUTO]}
  {$TOG_FINAL_ROT && [IfSet $FINAL_SIGMA_ROT] && ![StringSame $FINAL_OPTION_ROT ALL]} PEAKS ROT SELECT $FINAL_OPTION_ROT CUTOFF $FINAL_SIGMA_ROT
  {$TOG_FINAL_ROT && [StringSame $FINAL_OPTION_ROT ALL]} PEAKS ROT SELECT ALL
  {$TOG_PEAKS_ROT_CLUSTER} PEAKS ROT CLUSTER $PEAKS_ROT_CLUSTER
ENDIF

IF {[StringSame $MR_MODE TRA AUTO]}
  {$TOG_FINAL_TRA && [IfSet $FINAL_SIGMA_TRA] && ![StringSame $FINAL_OPTION_TRA ALL]} PEAKS TRA SELECT $FINAL_OPTION_TRA CUTOFF $FINAL_SIGMA_TRA
  {$TOG_FINAL_TRA && [StringSame $FINAL_OPTION_TRA ALL]} PEAKS TRA SELECT ALL
  {$TOG_PEAKS_TRA_CLUSTER} PEAKS TRA CLUSTER $PEAKS_TRA_CLUSTER
ENDIF

IF {[StringSame $MR_MODE AUTO ROT] }
  {$TOG_RESCORE_ROT && ![StringSame $RESCORE_ONOFF_ROT NOT_SET]} RESCORE ROT $RESCORE_ONOFF_ROT
  {$TOG_CLMN && [IfSet $CLMN_SPHERE]}  CLMN SPHERE $CLMN_SPHERE
  {$TOG_CLMN && [IfSet $CLMN_INNER]  }  CLMN LMIN $CLMN_INNER
  {$TOG_CLMN && [IfSet $CLMN_OUTER]  }  CLMN LMAX $CLMN_OUTER
ENDIF

IF {[StringSame $MR_MODE AUTO TRA] }
  {$TOG_RESCORE_TRA && ![StringSame $RESCORE_ONOFF_TRA NOT_SET]} RESCORE TRA $RESCORE_ONOFF_TRA
ENDIF

IF {[StringSame $MR_MODE ROT AUTO]}
  {$TOG_SAMP_ROT && [IfSet $SAMPLING_ROT]} SAMPLING ROT $SAMPLING_ROT
ENDIF

IF {[StringSame $MR_MODE TRA AUTO]}
  {$TOG_SAMP_TRA && [IfSet $SAMPLING_TRA]} SAMPLING TRA $SAMPLING_TRA
ENDIF

IF {![StringSame $MR_MODE PAK] }
  {$TOG_ANISO} MACANO PROTOCOL $MACA_PROTOCOL
  IF {$TOG_ANISO && [StringSame $MACA_PROTOCOL CUSTOM]}
  LOOP M 1 $N_MACA
    1 MACA ANIS $MACA_ANIS($M) BINS $MACA_BINS($M) SOLK $MACA_SOLK($M) SOLB $MACA_SOLB($M) NCYC $MACA_NCYC($M)
  ENDLOOP
  ENDIF
  {$TOG_BOXSCALE} BOXSCALE $BOXSCALE
  {$TOG_OUTLIER && [StringSame $OUTLIER_OPTION OFF] } OUTLIER REJECT OFF
  {$TOG_OUTLIER && [StringSame $OUTLIER_OPTION ON] && ![IfSet $OUTLIER_PROB] } OUTLIER REJECT ON
  {$TOG_OUTLIER && [StringSame $OUTLIER_OPTION ON] && [IfSet $OUTLIER_PROB] } OUTLIER REJECT ON PROBABILITY $OUTLIER_PROB
  {$TOG_SOLP && [IfSet $SOLP_FSOL] && [IfSet $SOLP_BSOL]} SOLPARAMETERS SIGA FSOL $SOLP_FSOL BSOL $SOLP_BSOL CONSTRAIN $SOLP_FIXB
  {$TOG_BULK_SOLP} SOLPARAMETERS BULK USE $SOLP_BULK_USE
  {$TOG_BULK_SOLP && $SOLP_BULK_USE} SOLPARAMETERS BULK FSOL $SOLP_BULK_FSOL BSOL $SOLP_BULK_BSOL
ENDIF

IF {![StringSame $MR_MODE PAK]}
  {$TOG_BINS && [IfSet $BINS_L]} BINS DATA MIN $BINS_L 
  {$TOG_BINS && [IfSet $BINS_H]} BINS DATA MAX $BINS_H 
  {$TOG_BINS && [IfSet $BINS_W]} BINS DATA WIDTH $BINS_W 
  {$TOG_BINS_ENSE && [IfSet $BINS_ENSE_L]} BINS ENSEMBLE MIN $BINS_ENSE_L 
  {$TOG_BINS_ENSE && [IfSet $BINS_ENSE_H]} BINS ENSEMBLE MAX $BINS_ENSE_H 
  {$TOG_BINS_ENSE && [IfSet $BINS_ENSE_W]} BINS ENSEMBLE WIDTH $BINS_ENSE_W 
  {$TOG_RESHARPEN && [IfSet $RESHARPEN_PERC]} RESHARPEN PERC $RESHARPEN_PERC
ENDIF

IF {[StringSame $MR_MODE AUTO PAK ]}
  {$TOG_PACK_DISTANCE} PACK DISTANCE $PACK_DISTANCE 
  {$TOG_PACK_TRACE} PACK TRACE USE $PACK_TRACE TRACE MAX $PACK_TRACE_MAX
  {$TOG_PACK_COMPACT} PACK COMPACT $PACK_COMPACT_ONOFF
ENDIF

IF {[StringSame $MR_MODE AUTO RNP]}
  {$TOG_MACM} MACMR PROTOCOL $MACM_PROTOCOL
  IF {$TOG_MACM && [StringSame $MACM_PROTOCOL CUSTOM]} 
  LOOP M 1 $N_MACM
    1 MACMR ROT $MACM_ROT($M) TRA $MACM_TRA($M) BFAC $MACM_BFAC($M) VRMS $MACM_VRMS($M) CELL $MACM_CELL($M) LAST $MACM_LAST($M) NCYC $MACM_NCYC($M)
  ENDLOOP
  ENDIF
ENDIF

IF {[StringSame $MR_MODE AUTO RNP PAK]}
  {$TOG_PTGR_SEQ && [IfSet $PTGR_COVERAGE]} PTGROUP COVERAGE $PTGR_COVERAGE
  {$TOG_PTGR_SEQ && [IfSet $PTGR_IDENTITY]} PTGROUP IDENTITY $PTGR_IDENTITY
  {$TOG_PTGR_XYZ && [IfSet $PTGR_RMSD]} PTGROUP RMSD $PTGR_RMSD
  {$TOG_PTGR_XYZ && [IfSet $PTGR_TOL_ANG]} PTGROUP TOL ANGULAR $PTGR_TOL_ANG
  {$TOG_PTGR_XYZ && [IfSet $PTGR_TOL_SPC]} PTGROUP TOL SPATIAL $PTGR_TOL_SPC
ENDIF

IF {[StringSame $MR_MODE AUTO]}
  {$TOG_SEARCH_ORDER_AUTO} SEARCH ORDER AUTO $SEARCH_ORDER_AUTO_ONOFF
ENDIF

IF {[StringSame $TNCS_USE ON]}
  {$TOG_TNCS_ROT_GRID && [IfSet $TNCS_ROT_GRID]} TNCS ROTATION GRID $TNCS_ROT_GRID 
  {$TOG_TNCS_ROT_ANGLE && [IfSet $TNCS_ROT_ANGLE_X] && [IfSet $TNCS_ROT_ANGLE_Y] && [IfSet $TNCS_ROT_ANGLE_Z]} TNCS ROTATION ANGLE $TNCS_ROT_ANGLE_X $TNCS_ROT_ANGLE_Y $TNCS_ROT_ANGLE_Z
  {$TOG_TNCS_REFI_ROT && [IfSet $TNCS_REFI_ROT]} TNCS REFINE ROTATION $TNCS_REFI_ROT 
  {$TOG_TNCS_ROT_RANGE && [IfSet $TNCS_ROT_RANGE]} TNCS ROT RANGE $TNCS_ROT_RANGE 
  {$TOG_TNCS_ROT_SAMPLING && [IfSet $TNCS_ROT_SAMPLING]} TNCS ROT SAMPLING $TNCS_ROT_SAMPLING 
  {$TOG_TNCS_VAR_RMSD && [IfSet $TNCS_VAR_RMSD]} TNCS VAR RMSD $TNCS_VAR_RMSD 
  {$TOG_TNCS_VAR_FRAC && [IfSet $TNCS_VAR_FRAC]} TNCS VAR FRAC $TNCS_VAR_FRAC 
  {$TOG_TNCS_PATT_RESO && [IfSet $TNCS_PATT_HIRES]} TNCS PATT HIRES $TNCS_PATT_HIRES 
  {$TOG_TNCS_PATT_RESO && [IfSet $TNCS_PATT_LORES]} TNCS PATT LORES $TNCS_PATT_LORES 
  {$TOG_TNCS_PATT_DISTANCE && [IfSet $TNCS_PATT_DISTANCE]} TNCS PATT DISTANCE $TNCS_PATT_DISTANCE 
ENDIF


