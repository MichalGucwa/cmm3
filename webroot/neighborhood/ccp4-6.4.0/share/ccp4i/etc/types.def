#
#     Copyright (C) 1999-2004  Liz Potterton, Peter Briggs
#
#     This code is distributed under the terms and conditions of the
#     CCP4 Program Suite Licence Agreement as a CCP4 Library.
#     A copy of the CCP4 licence can be obtained by writing to the
#     CCP4 Secretary, Daresbury Laboratory, Warrington WA4 4AD, UK.
#
#CCP4i_cvs_Id $Id$
#====================================================================
# CCP4 Interface - types.def
#
#
# Define the parameter types 
# 
# Note: In the CCP4I a parameter type definition begins with an underscore. 
# It is an element of the array typedef and is a list variable.  
# This is different from Tcl convention that a variable beginning 
#
#========================================================================

#=============TYPE=CLASSES===============================================
# Parameter type classes - the list associated with each class name
# below is the list of properties which are associated with each parameter
# type.   
#========================================================================

  set typedef(file) 		{ file format ext description viewer viewercmd }
  set typedef(int) 		{ int nchar min max oblig deflist}
  set typedef(logical)	 	{ logical onvalue offvalue }
  set typedef(varbutton)	{ varbutton onvalue offvalue}
  set typedef(exframe_rb)	{ exframe_rb onvalue offvalue}
  set typedef(text) 		{ text nchar oblig deflist }
  set typedef(word) 		{ word nchar oblig deflist }
  set typedef(real) 		{ real nchar min max oblig deflist}
  set typedef(mtz_label)	{ mtz_label mtz_column_type deflist deftypelist}
  set typedef(menu)   		{ menu deflist aliaslist }
  set typedef(selmenu)   	{ selmenu deflist aliaslist grouplist }
  set typedef(varmenu)  	{ varmenu deflistVar aliaslistVar nchar }
  set typedef(postmenu)   	{ postmenu deflist aliaslist nchar }
  set typedef(list)  		{ list type nchar }
  set typedef(datalist) 	{ datalist }
  set typedef(default_dir)  	{ default_dir deflist aliaslist }


# ===============PRAMETER=TYPES============================================
# The first element in the property list for each parameter type is
# its class and this determines the format of the rest of the list
# =========================================================================


# =========================================================General types

set typedef(_data)		{ datalist }
set typedef(_int)		{ int 6 * * NOTOBLIG }
set typedef(_positiveint)	{ int 6 0 * NOTOBLIG }
set typedef(_positiveint1)	{ int 6 1 * NOTOBLIG }
set typedef(_negativeint)	{ int 6 * 0 NOTOBLIG }
set typedef(_int_0_10)		{ int 6 0 10 NOTOBLIG }

set typedef(_real)	        { real 6 * * NOTOBLIG }
set typedef(_positivereal)	{ real 6 0.0 * NOTOBLIG }
set typedef(_negativereal)	{ real 6 * 0.0 NOTOBLIG }

set typedef(_fraction)	 	{ real 5 0.0 1.0 NOTOBLIG }
set typedef(_vector2)		{ list real 2 }
set typedef(_vector3)		{ list real 3 }

set typedef(_logical)		{ logical 1 0 }

set typedef(_word)		{ word 15 NOTOBLIG }

set typedef(_text)	 	{ text 10 NOTOBLIG }
set typedef(_text50)	 	{ text 50 NOTOBLIG }
set typedef(_title_text)	{ text 80 NOTOBLIG }
set typedef(_filename)		{ text 50 OBLIG }
set typedef(_dir)		{ text 50 OBLIG }
set typedef(_version)		{ text 30 NOTOBLIG }

set typedef(_exframe_rb)        { exframe_rb 1 0 }
set typedef(_menu)		{ menu {} {} }
set typedef(file_types)		{ _any_file _MTZ_file _na4_file _sca_file
_hkl_file _image_file _map_file _mask_file _q_map_file _o_map_file _pdb_file
_CIF_file _html_file _xml_file _tls_file _lib_file _def_file _run_file
_log_file _log_graph_file _ps_file _plot84_file _dic_file _xmgr_file
_graph_file _data_file _txt_file _pck_file _tab_file _mr_file _ha_file
_molrep_file _rlist_file _sol_file _seq_file _clustalw_file _msf_file
_phylip_file _blast_file _pir_file _oca_file _fasta_file}

set typedef(graph_file_types) { _log_file _data_file _xmgr_file }

set typedef(_any_file)		{ file ANY ".*"  "All" "" "" }
set typedef(_MTZ_file)		{ file MTZ ".mtz" "mtz MTZ" \
				  {"MTZ header info" "viewhkl"} {MTZViewer RunViewHKL} }
set typedef(_na4_file)          { file NA4 ".na4"  "na4 ascii MTZ format" "" "" }
set typedef(_sca_file)          { file SCA ".sca"  "sca merged Scalepack output" "" "" } 
set typedef(_ref_file)		{ file REF ".ref"  "d*TREK reflnlist file" "" "" }
set typedef(_hkl_file)          { file HKL ".hkl,.HKL,.sca"  "hkl non-CCP4 data" "" "" }
set typedef(_image_file)	{ file IMG ".img"  "diffraction image file" "" "" }
set typedef(_map_file)		{ file MAP ".map"  "map CCP4 map" \
					{"Map header info" "MapSlicer (map sections)" RasMol } {MAPViewer RunMapslicer RunRasMolMap } }
set typedef(_mask_file)		{ file MASK ".msk" "msk CCP4 mask (map)" \
					{"Map header info" "MapSlicer (map sections)" RasMol } {MAPViewer RunMapslicer RunRasMolMap } }
set typedef(_q_map_file)	{ file QMAP ".mbk" "Quanta brick map" "" "" }
set typedef(_o_map_file)	{ file OMAP ".mbk" "O brick map" "" "" }
set typedef(_pdb_file)		{ file PDB ".pdb"  "PDB coordinate file" \
                                        {"TextViewer" "RasMol" "PyMol"} \
                                        {PDBViewer RunRasMol RunPyMol} }
set typedef(_CIF_file)		{ file CIF ".cif"  "CIF coordinate" "" "" }
set typedef(_lib_file)		{ file LIB ".cif"  "CIF monomer description" "" "" }
set typedef(_html_file)		{ file HTML ".html"  "HTML file" "HTML Browser" "open_url" }
set typedef(_xml_file)		{ file XML ".xml"  "XML file" "" "" }
set typedef(_tls_file)		{ file TLS ".tls"  "TLS file" "" "" }
set typedef(_def_file)		{ file DEF ".def"  "def CCP4I parameter" "" "" }
set typedef(_scala_file)	{ file SCALA ".scala"  "scala parameters" "" "" }
set typedef(_log_file)		{ file LOG ".log" "log CCP4 log"  {"View Log File" "View Log Graphs" "Text Browser" "HTML Browser" } {LOGViewer LogGraph DisplayTextFile open_url} }
set typedef(_rlist_file)      { file RLIST ".rlist" "Phaser solution data" { "Edit MR file" } { MRViewer } }
set typedef(_sol_file)        { file SOL ".sol" "Phaser solution file" { "Edit MR file" } { MRViewer } }
set typedef(_log_graph_file)  { file LOGGRAPH .loggraph "CCP4 graph file" "Display log graphs" LogGraph }
set typedef(_run_file)		{ file RUN ".run" "run CCP4I run script"  "" "" }
set typedef(_ps_file)		{ file PS  ".ps" "ps postscript"  "Display Postscript file" "PSViewer" }
set typedef(_graph_file)	{ file GRAPH  .graph "CCP4 graph file" \
					{ "Display graph" } LogGraph_graph }
set typedef(_xmgr_file)		{ file XMGR  ".xmgr" "xmgr plot file" \
					{ "View Xmgr plot" } { XMGRViewer} }
set typedef(_plot84_file)	{ file PLOT84  ".plt" "plt CCP4 plot84" \
		{Xplot84 Ghostview}  {PLOT84Viewer PLOT84PSViewer } }
set typedef(_dic_file)		{ file DIC  ".dic" "dic dictionary" "" "" }
set typedef(_data_file)		{ file DAT ".dat"  "dat column data" "" "" }
set typedef(_txt_file)		{ file TXT ".txt"  "txt text" "" "" }
set typedef(_pck_file)          { file PCK ".hkl"  "Amore packed hkl data" "" "" }
set typedef(_tab_file)          { file TAB ".tab"  "Amore table data" "" "" }
set typedef(_mr_file)          { file MR ".mr"  "Mol rep solution data" {"Edit MR file"} {MRViewer} }
set typedef(_molrep_file)          { file MR0 ".molrep_rf"  "Molrep rotation solutions" {"Edit MR file"} {MRViewer} }
set typedef(_ha_file)          { file HA ".ha"  "Heavy atom frac coord" {"Edit HA file"} {HAViewer} }
set typedef(_gz_file)          { file GZ ".gz"  "Gzip tar file" "" "" }

set typedef(_aln_file) 		{ file ALN ".ali" "Alignment file" "" "" }
set typedef(_seq_file) 		{ file SEQ ".seq,.pir,.fas,.fasta" "generic Sequence file" "" "" }
set typedef(_clustalw_file)     { file CLUST ".aln" "Clustalw alignment file" "" "" }
set typedef(_msf_file)          { file MSF ".msf" "MSF alignment file" "" "" }
set typedef(_phylip_file)       { file PHYLIP ".phy" "Phylip alignment file" "" "" }
set typedef(_blast_file)        { file BLAST ".bla" "Blast alignment file" "" "" }
set typedef(_pir_file)          { file PIR ".pir" "PIR sequence file" "" "" }
set typedef(_oca_file)          { file OCA ".oca" "OCA alignment file" "" "" }
set typedef(_fasta_file)        { file FASTA ".fas" "FASTA alignment file" "" "" }

set typedef(_MGPY_file)         { file MGPY ".py" "MG script file" "" "" }
set typedef(_pickle_file)         { file pickle ".pkl" "MG save status file" "" "" }
set typedef(_pic_file)         { file PIC ".ppm,.png" "Screen snapshot file" "" "" }
set typedef(_res_file)         { file RES ".res" "SHELXD result file" "" "" }
set typedef(_phs_file)         { file PHS ".phs" "XtalView phases file" "" "" }
set typedef(_mol2_file)        { file MOL2 ".mol2" "Sybil MOL2 coordinate file" "" "" }
set typedef(_smiles_file)      { file SMILES ".smi" "Smiles string file" "" "" }

set typedef(_mol_file)   { file MOL ".mol" "MDL Molfile coordinate file" "" "" }
set typedef(_prdrg_file) { file PRODRG ".pdb,.mol,.mol2,.smi,.draw" "PRODRG input file" "" "" }

set typedef(_current_frame)	{ menu { 1 } }

set typedef(_list_of_int)	{ list int 40 }
set typedef(_list_of_positiveint)	{ list positiveint 40 }
set typedef(_list_of_real)	{ list real 40 }
set typedef(_list_of_text)	{ list text 40 }
set typedef(_list_of_files)	{ list filename 40 }

set typedef(_date)		{ text 20 NOTOBLIG }

set typedef(_fileselviewers) { varmenu VIEWER_LIST VIEWERCMD_LIST 20 }
set typedef(_fileselect_sort)	{ menu { name date } }
set typedef(_fileselect_default)    { menu { "alphabetically by name" \
                                         "by date, reverse order" }
                                        { name date } }
set typedef(_fileselect_listinfo)	{ menu { "file name"
					  "file details" }
					       { name  details } }

#==========================================================General files 

set typedef(_default_dirs) 	{ default_dir {} {} }

set typedef(_header_format)	{ menu	{	"MTZ"
						"Map" } }

#===================================================Very crystallographic

set typedef(_space_group)	{ text 12 NOTOBLIG @valid_space_groups  }
set typedef(_angle)		{ real 6 -360 360 NOTOBLIG }
set typedef(_translation)	{ real 6 -1000 1000 OBLIG }
set typedef(_resolution)	{ real 6 0.0  * NOTOBLIG }
set typedef(_cell_length)	{ real 6 0.0 9999.0 NOTOBLIG }
set typedef(_cell_angle)	{ real 6 0.0 180.0 NOTOBLIG }
set typedef(_b_value)		{ real 6 -100.0 1000.0 NOTOBLIG }
set typedef(_orth_code)		{ int 2 1 6 NOTOBLIG }


#==========================================================MTZ file related

set typedef(_column_name)	{ text 25 NOTOBLIG }

set typedef(_mtz_label)		{ mtz_label {*} Unassigned H }
set typedef(_mtz_label_h)	{ mtz_label {H} Unassigned H }
set typedef(_mtz_label_fp)      { mtz_label {F} Unassigned H }
set typedef(_mtz_label_f)	{ mtz_label {F G} Unassigned H }
set typedef(_mtz_label_g)	{ mtz_label {G} Unassigned H }
set typedef(_mtz_label_j)	{ mtz_label {J K} Unassigned H }
set typedef(_mtz_label_k)	{ mtz_label {K} Unassigned H }
set typedef(_mtz_label_sig)	{ mtz_label {Q L M} Unassigned H }
set typedef(_mtz_label_l)	{ mtz_label {L Q} Unassigned H }
set typedef(_mtz_label_m)	{ mtz_label {M Q} Unassigned H }
set typedef(_mtz_label_phi)	{ mtz_label {P} Unassigned H }
set typedef(_mtz_label_w)	{ mtz_label {W} Unassigned H }
set typedef(_mtz_label_dw)	{ mtz_label {Q} Unassigned H }
set typedef(_mtz_label_d)	{ mtz_label {D} Unassigned H }
set typedef(_mtz_label_e)	{ mtz_label {E} Unassigned H }
set typedef(_mtz_label_r)	{ mtz_label {R} Unassigned H }
set typedef(_mtz_label_i)	{ mtz_label {I} Unassigned H }
set typedef(_mtz_label_y)	{ mtz_label {Y} Unassigned H }
set typedef(_mtz_label_hl)	{ mtz_label {A} Unassigned H }
set typedef(_mtz_label_freer)	{ mtz_label {I} Unassigned H }

set typedef(_mtz_label_out)	{ text 25 }

set typedef(_MTZ_data_type_names) { menu \
			       { {H index}         \
                               {F structure factor} \
                               {G Friedel signed SF} \
                               {J intensity}     \
                               {K Friedel signed I}     \
                               {D anomalous dif} \
                               {Q std deviation} \
                               {L Friedel signed SF SD} \
                               {M Friedel signed I SD} \
                               {E normalised SF} \
                               {P phase (degs)}  \
                               {W weight}        \
                               {A phase probability} \
                               {B batch number}  \
                               {Y M/ISYM}        \
                               {I other integer} \
                               {R other real}    \
                               {X X-PLOR Rfree} } \
			       {H F G J K D Q L M E P W A B Y I R X}
                         }

set typedef(_MTZ_type)	{ menu	{H F G J K D Q L M E P W A B Y I R X} }

set typedef(_sort_order)        { menu {        "H K L"
                                                "H L K"
                                                "L K H"
                                                "L H K"
                                                "K H L"
                                                "K L H" } }

set typedef(_xyz_sort_order)	{ menu {	"XYZ"
						"XZY"
						"YZX"
						"YXZ"
						"ZXY"
						"ZYX" } 
					{	"X Y Z"
						"X Z Y"
						"Y Z X"
						"Y X Z"
						"Z X Y"
						"Z Y X" } }

set typedef(_xyz_axis)	{ menu	{       "X" "Y" "Z" } }

set typedef(_map_limits_mode) { varmenu MAP_LIMITS_MENU MAP_LIMITS_ALIAS 25 }

# ======================================================= general molecule

set typedef(_chain_id)          { text 4 NOTOBLIG }

set typedef(_res_id)            { text 6 NOTOBLIG }



# ============================================================General preferences

set typedef(_default_project)	{ varmenu PROJECT_MENU {} 10 }
set typedef(_colour_mode)       { menu { "Default" "Job status" "Job task" \
                                         "Word in job title" } \
                                       { "default" "status" "task" "title" } }
set typedef(_exit_prompt)       { menu { "always" \
					 "only when not using exit button" \
					 "never" } \
	                               { "ALWAYS" "NOT_EXIT_BUTTON" "NEVER" } }

#=============================================================================
# TASK SPECIFIC PARAMETER TYPES
#=============================================================================



#==============================================================Run FFT

set typedef(_fft_program)	{ menu { "Run FFT" \
					"Use existing map"} 
					{ fft
					  MAP } }

set typedef(_fft_map_mode) 	{menu { "simple" \
					"nF1-mF2" \
					"anomalous" \
					"vector difference" 
					"double difference"
					"phased translation"  } \
				      { {F1 SIG1 PHI W} \
                                	{F1 SIG1 F2 SIG2 PHI W} \
                                	{DANO SIG1 PHI W} \
                                	{F1 SIG1 F2 SIG2 PHI W PHI2 W2} \
                                	{F1 SIG1 F2 SIG2 PHI W FH PHIH} \
                                	{W F1 F2 PHI PHI2}  }   }

set typedef(_patterson_map_mode) { menu { "Patterson"
                                          "Patterson from intensity"
				          "difference Patterson"
				          "anomalous difference Patterson"
					  "Patterson using anom diff (D) data" }
					{ PATTERSON PATTERSONI DIFFERENCE ANOMALOUS DANO } }

set typedef(_fft_map_format) {menu   {CCP4 O QUANTA } }

set typedef(_fft_coords) { menu   {       "no coordinates"
                                                "coordinates from PDB file"
                                                "coordinates of peaks in map" }
				{ NO FILE PEAKS } }

set typedef(_map_format) {menu   {CCP4 O QUANTA XtalView } }

set typedef(_map_defdir)	{ menu { TEMPORARY "current project" } { TEMPORARY PROJECT } }

set typedef(_fft_scale_ampl1)	{ real 4 0.0 10.0 NOTOBLIG }
set typedef(_fft_scale_ampl2)	{ real 4 0.0 10.0 NOTOBLIG }


set typedef(_npo_contour_param)	{ menu { 	"absolute value"
						"*sigma"
						"fraction of max" }
					{ 	""
						SIG
						MAX } }

set typedef(_npo_contour_mode)	{ menu { 	"list"
						"range" }
					   {    "CONTOUR_LIST"
						"CONTOUR_RANGE" } }

set typedef(_npo_grid_plot_mode) { menu {	"no"
						"all equivalent"
						"major&minor" }  }

set typedef(_npo_grid_plot_units) { menu {	"A"
						"frac" } }

set typedef(_npo_colour)	 { menu {	"black"
						"red"
						"green"
						"blue"
						"yellow" } }

set typedef(_npo_labels)	{ menu   {      "Number"
						"Label"
						"Do not label" }
					 {	NUMBER
						LABEL
						NO } }

set typedef(_patterson_coords) { menu	{       "no coordinates"
						"coordinates from PDB file"
						"coordinates of peaks in map"
						"vectors between atom coordinates" }
					{	NO
						FILE
						PEAKS
						VECTORS   } }


set typedef(_peaks_mode)	{ menu {	"Find peaks in map" 
						"Calculate vectors from atoms" }
					{ PEAKS 
					  VECTORS } }

set typedef(_patterson_sections_mode) { menu {	"default Harker"
						"user defined" } 
				 	{	"HARKER"
						"USER" } }

set typedef(_plot_format)	{ menu {	"PLOT84"
						"Postscript" } }

set typedef(_npo_section_frac)  { menu {        "fractional coordinates"
						"grid units" }
					 { 1 0 } }

#--------------------------------------------------------database archive options

set typedef(_db_files)		{  list text }

set typedef(_db_status)		{ menu { "ON HOLD" STARTING RUNNING FINISHED FAILED REPORTED REMOTE KILLED ERROR } } 

set typedef(_archive_cleanup_options_3)	{ menu { "Do nothing" 
						 "Delete temporary files" 
						 "Delete all output files" 
						 "Delete output files & remove from database" } 
						{ nothing
						  temp
						  all
						  database } }

set typedef(_archive_cleanup_options_1) { menu { "Do nothing"
                                                 "Remove from database" }
                                                { nothing
                                                  database } }

set typedef(_log_archive_1_status) { menu {   "Delete"
                                                "Keep"
                                                "Archive"
                                                "Archive & delete" }
					   {	"delete"
						"keep"
						"archive"
						"archdel" } }

set typedef(_log_archive_2_status) { menu { 	"Retain archive"
						"Restore archive"
                                                "Delete archive"
						"Restore&delete archive" }
                                           {    "retain"
						"restore"
						"delarch"
                                                "restdelarch" } }

set typedef(_archive_1_status) { menu {           "Delete"
						"Keep"
                                                "Archive"
                                                "Archive & delete" }
					{	"delete"
						"keep"
						"archive"
						"archdel" } }

set typedef(_archive_2_status)  { menu {	"Delete archive"
						"Retain archive"
						"Restore from archive"
						"Restore & delete archive " }
					{	"delarch"
						"retain"
						"restore"
						"restdelarch" } }

set typedef(_archive_3_status)  { menu {        "Delete"
						"Delete archive"
						"Keep & retain archive" }
					{	"delete"
						"delarch"
						"retain"  } }
						
						
set typedef(_bug_status)	{ menu { 	"open" \
						"question" \
						"fixed" \
						"on_hold" \
						"no_action" \
						"closed" } }

set typedef(_bug_priority)	{ menu {	"request" \
						"regular" \
						"URGENT" } }

set typedef(_taskinfo_format)  { menu {		"MTZ" 
						"HKL"
						"PDB"
						"XYZ"
						"map"
						"mask"
						"other" } }

#===================================================================
set typedef(_graph_type)        { menu {        "AUTO"
                                                "NOUGHT"
                                                "XMIN"
                                                "XMAX"
                                                "YMIN"
                                                "YMAX" } }

set typedef(_font_set)	{ menu { large medium small } }

#====================================================================

set typedef(_amore_model)  { varmenu MODEL_LIST MODEL_ALIAS_LIST 20 }

set typedef(_mr_model_mode) { menu {"coordinates" "SFs from MTZ" "Es from MTZ"} \
                                { XYZIN SFMAP EMAP } }


set typedef(_mtz_ext) [list _arp _sfcheck _detwin _dm _dmmulti _editdname _fffear _ffjoin _unique _mlphare _ncsref _prephadata _rantan _refmac _reindex _scala _scaleit _sfall _sftools _sigmaa _solomon _sort _truncate ]


#--------------------------------------------------------------------
set typedef(_data_entry)  { menu { "entered below" "from file" }
                                        { LIST FILE } }

set typedef(_harvest_mode)    { menu { "Create harvest file in project harvesting directory" \
                                     "Create harvest file in central harvesting directory" \
                                     "Use current working directory" \
                                     "Do not create harvest file" } \
                               { PROJECT HARVEST CURRENTDIR NOHARVEST } }

set typedef(_remote_protocol)   { menu { "rsh" "ssh" } }

set typedef(_type_batch_queue)  { menu { "Sun Grid Engine" \
                                          "DQS" \
                                          "PBS" \
                                          "Condor" \
                                          "Other" } \
                                { SGE DQS PBS Condor Other } }

set typedef(_mtz_projectname) { word 20 NOTOBLIG } 
set typedef(_mtz_crystalname) { word 20 NOTOBLIG } 
set typedef(_mtz_datasetname) { word 20 NOTOBLIG } 


set typedef(_mail_to)	{ menu { "Help Desk - for program bugs" \
				"CCP4i Developers - for CCP4i bugs" \
				"CCP4 Bulletin Board - for scientific queries" } \
				{ HELP GUI BB } }

set typedef(_mail_attach) { menu { "no files" \
				  "Def file" \
				  "Def file and log file" } \
				{ NO DEF DEFLOG } }
